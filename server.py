from flask import Flask, send_from_directory
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from aiogram.filters import Command
from aiogram import F
from threading import Thread

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram-–±–æ—Ç–∞ ===
TOKEN = '7930529716:AAF5TYEKKTsG_jUD3k0gtzIa3YvAfikUIdk'

bot = Bot(token=TOKEN)
dp = Dispatcher()

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Flask-—Å–µ—Ä–≤–µ—Ä–∞ ===
app = Flask(__name__, static_folder='../src')


# === –†–æ—É—Ç—ã Flask ===
@app.route('/')
def index():
    return send_from_directory('../src', 'index.html')


@app.route('/<path:filename>')
def static_files(filename):
    return send_from_directory('../src', filename)


@app.route('/assets/<path:filename>')
def assets_files(filename):
    return send_from_directory('../src/assets', filename)


# === Telegram-–±–æ—Ç: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ===
@dp.message(Command("start"))
async def start(message: types.Message):
    username = message.from_user.username or message.from_user.first_name or "User"
    web_app_url = f"https://mmm-coin.web.app/"  # URL –≤–∞—à–µ–≥–æ Flask-—Å–µ—Ä–≤–µ—Ä–∞

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ò–≥—Ä–∞—Ç—å –≤ 1 –∫–ª–∏–∫ üéÆ', web_app=WebAppInfo(url=web_app_url))],
        [InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª üì¢', url='https://t.me/your_channel')],
        [InlineKeyboardButton(text='–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –∏–≥—Ä–µ üí∞', callback_data='how_to_earn')]
    ])

    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MMM Coin üéÆ!\n"
        "–û—Ç–Ω—ã–Ω–µ —Ç—ã ‚Äî –¥–∏—Ä–µ–∫—Ç–æ—Ä –∫—Ä–∏–ø—Ç–æ–±–∏—Ä–∂–∏. –ö–∞–∫–æ–π? –í—ã–±–∏—Ä–∞–π —Å–∞–º. –¢–∞–ø–∞–π –ø–æ —ç–∫—Ä–∞–Ω—É, —Å–æ–±–∏—Ä–∞–π –º–æ–Ω–µ—Ç—ã, –∫–∞—á–∞–π –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥, —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–æ—Ö–æ–¥–∞. –ú—ã –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –æ—Ü–µ–Ω–∏–º —ç—Ç–æ –≤–æ –≤—Ä–µ–º—è –ª–∏—Å—Ç–∏–Ω–≥–∞ —Ç–æ–∫–µ–Ω–∞, –¥–∞—Ç—ã –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã —É–∑–Ω–∞–µ—à—å —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ. –ü—Ä–æ –¥—Ä—É–∑–µ–π –Ω–µ –∑–∞–±—ã–≤–∞–π ‚Äî –∑–æ–≤–∏ –∏—Ö –≤ –∏–≥—Ä—É –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ –µ—â—ë –±–æ–ª—å—à–µ –º–æ–Ω–µ—Ç!",
        reply_markup=keyboard
    )


@dp.callback_query(F.data.in_({'how_to_earn'}))
async def button_handler(callback_query: types.CallbackQuery):
    if callback_query.data == 'how_to_earn':
        await bot.send_message(callback_query.from_user.id, "–ß—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å, –ø—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã!")
    await callback_query.answer()


# === –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ ===
async def telegram_main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


# === –ó–∞–ø—É—Å–∫ Flask –∏ Telegram –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ ===
def run_flask():
    app.run(host='0.0.0.0', port=5000, use_reloader=False)



if __name__ == '__main__':
    # Flask –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    flask_thread = Thread(target=run_flask)
    flask_thread.start()

    # Telegram –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º asyncio-—Å–æ–±—ã—Ç–∏–∏
    asyncio.run(telegram_main())
